openapi: 3.0.3
info:
  title: Django DRF Serve_Connect
  version: 0.0.0
paths:
  /listings/all_service/:
    get:
      operationId: listings_all_service_retrieve
      tags:
      - listings
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /listings/all_service/{id}/:
    get:
      operationId: listings_all_service_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - listings
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /listings/all_service/{id}/create_reason/:
    post:
      operationId: listings_all_service_create_reason_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - listings
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /listings/all_service/delete/{id}/:
    delete:
      operationId: listings_all_service_delete_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - listings
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /listings/all_service/edit/{id}/:
    put:
      operationId: listings_all_service_edit_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - listings
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /listings/create_service/:
    post:
      operationId: listings_create_service_create
      tags:
      - listings
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /listings/interaction/:
    get:
      operationId: listings_interaction_retrieve
      tags:
      - listings
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /listings/services/{id}/interaction/:
    get:
      operationId: listings_services_interaction_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - listings
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /listings/user_service/:
    get:
      operationId: listings_user_service_retrieve
      tags:
      - listings
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /user/login-page/:
    post:
      operationId: user_login_page_create
      description: |-
        This view handles user login by allowing authentication through either a username or email,
        along with a password.
        It first checks if both fields are provided.
        Then, it looks up the user based on the identifier type (email or username).
        If the user exists and the password is correct,
        it authenticates the user and returns JWT tokens (access and refresh),
        user information, verification status, and profile update status.
      tags:
      - user
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /user/register/:
    post:
      operationId: user_register_create
      description: |-
        This view saves a new user,
        generates an OTP(One Time Password) and saves the OTP in the OneTime model table.
          After the OTP has been generated, an email is sent to the new user
      tags:
      - user
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /user/update-profile/:
    post:
      operationId: user_update_profile_create
      tags:
      - user
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /user/update_password/:
    patch:
      operationId: user_update_password_partial_update
      tags:
      - user
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /user/user-ver/:
    post:
      operationId: user_user_ver_create
      description: |-
        This view verifies a user's OTP (one-time password).
        If the OTP is valid and the user is not yet verified,
        marks them as verified.
      tags:
      - user
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
